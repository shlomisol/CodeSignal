//
// Definition for binary tree:
// template<typename T>
// struct Tree {
//   Tree(const T &v) : value(v), left(nullptr), right(nullptr) {}
//   T value;
//   Tree *left;
//   Tree *right;
// };
bool isMirror(Tree<int>* root1, Tree<int>* root2)
{
    if(root1==NULL&&root2==NULL)
        return true;
    if(root1&&!root2 || !root1&&root2)
        return false;
    if(root1->value != root2->value)
        return false;
    if(isMirror(root1->right,root2->left)&&isMirror(root1->left,root2->right))
        return true;
    else return false;
}
bool isTreeSymmetric(Tree<int> * t) {
    return isMirror(t,t);
}

bool areFollowingPatterns(std::vector<std::string> strings, std::vector<std::string> patterns) {
    unordered_map<string,string> stringToPattern;
    unordered_map<string,string> patternToString;
    unordered_map<string,string>::iterator stringToPatternIt;
    unordered_map<string,string>::iterator patternToStringIt;
    for(int i=0; i<strings.size(); i++)
    {
        stringToPatternIt = stringToPattern.find(strings[i]);
        // the string already have a pattern attached to it
        if(stringToPatternIt != stringToPattern.end())
        {
            if(stringToPatternIt->second == patterns[i])
                continue;
            return false;
        }
        patternToStringIt = patternToString.find(patterns[i]);
        // the pattern already have a string attached to it
        if(patternToStringIt != patternToString.end())
        {
            if(patternToStringIt->second == strings[i])
                continue;
            return false;
        }
        stringToPattern.insert(pair<string,string>(strings[i], patterns[i]));
        patternToString.insert(pair<string,string>(patterns[i],strings[i]));
    }
    return true;
}
